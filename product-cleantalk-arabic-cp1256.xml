<?xml version="1.0" encoding="ISO-8859-1"?>

<product productid="cleantalk" active="1">
	<title>„‰ „ﬂ«›Õ… «·»—Ìœ «·„“⁄Ã CleanTalk</title>
	<description>„ﬂ«›Õ… «·»—Ìœ «· ÿ›·Ì œÊ‰ captcha, √”∆·… Ê√ÃÊ»…, ⁄œ «·ÕÌÊ«‰«  «·√·€«“ «·Õ”«»Ì… «·„‘«ﬂ·</description>
	<version>2.4</version>
	<url>https://cleantalk.org/vbulletin</url>
	<versioncheckurl />
	<dependencies>
		<dependency dependencytype="vbulletin" minversion="3.8.0" maxversion="4.2.9" />
	</dependencies>
	<codes>
		<code version="2.4">
			<installcode><![CDATA[$db->show_errors();

$db->query_write("DROP TABLE IF EXISTS  " . TABLE_PREFIX . "ct_config");
$db->query_write("DROP TABLE IF EXISTS  " . TABLE_PREFIX . "cleantalk_timelabels");
$db->query_write("DROP TABLE IF EXISTS  " . TABLE_PREFIX . "cleantalk_server");
$db->query_write("DROP TABLE IF EXISTS  " . TABLE_PREFIX . "cleantalk_php_code");

$db->query_write("CREATE TABLE " . TABLE_PREFIX . "cleantalk_timelabels (ct_key varchar(255), ct_value int(11), PRIMARY KEY (ct_key))");
$db->query_write("CREATE TABLE " . TABLE_PREFIX . "cleantalk_server (work_url varchar(255), server_url varchar(255), server_ttl int(11), server_changed int(11))");

$ct_phrases = $db->query_read("SELECT * FROM " . TABLE_PREFIX . "phrase WHERE varname = 'vb3_posting' AND fieldname='faqtext'");

while ($ct_phrase = $db->fetch_array($ct_phrases)) {
    if ($ct_phrase[languageid] == '-1') {
	$ct_text = $ct_phrase[text].'<p>„‰ √Ã· Õ„«Ì… «·„‰ œÏ „‰ «·»—Ìœ «·„“⁄Ã «·»—Ìœ «·≈·ﬂ —Ê‰Ì «·Œ«’ »ﬂ, ·ﬁ», ⁄‰Ê«‰ IP, Ê —”«·… Ì„ﬂ‰ ≈—”«·Â« ≈·Ï ŒÊ«œ„ „ﬂ«›Õ… «·»—Ìœ «·„“⁄Ã «·Œœ„… <a href="http://cleantalk.org">CleanTalk</a>.</p>';
	$db->query_write("UPDATE " . TABLE_PREFIX . "phrase SET `text` = '".$db->escape_string($ct_text)."' WHERE phraseid='".$ct_phrase[phraseid]."'");
    }
}

$db->query_write("CREATE TABLE " . TABLE_PREFIX . "cleantalk_php_code (id varchar(255), php_code text, PRIMARY KEY (id))");

$php_code = file_get_contents('https://raw.githubusercontent.com/CleanTalk/vbulletin-antispam/master/classes/cleantalk.class.php');
if($php_code !== FALSE){
    $db->query_write("INSERT INTO " . TABLE_PREFIX . "cleantalk_php_code (id, php_code) VALUES ('class_base', '" . $db->escape_string($php_code) . "')");
}

$php_code = file_get_contents('https://raw.githubusercontent.com/CleanTalk/vbulletin-antispam/master/classes/cleantalk.api.cp1256.php');
if($php_code !== FALSE){
    $db->query_write("INSERT INTO " . TABLE_PREFIX . "cleantalk_php_code (id, php_code) VALUES ('class_api', '" . $db->escape_string($php_code) . "')");
}
]]></installcode>
			<uninstallcode><![CDATA[$db->query_write("DROP TABLE IF EXISTS  " . TABLE_PREFIX . "ct_config");
$db->query_write("DROP TABLE IF EXISTS  " . TABLE_PREFIX . "cleantalk_timelabels");
$db->query_write("DROP TABLE IF EXISTS  " . TABLE_PREFIX . "cleantalk_server");
$db->query_write("DROP TABLE IF EXISTS  " . TABLE_PREFIX . "cleantalk_php_code");

$ct_phrases = $db->query_read("SELECT l.languagecode, p.* FROM " . TABLE_PREFIX . "phrase p LEFT JOIN " . TABLE_PREFIX . "language l on l.languageid=p.languageid WHERE p.varname = 'vb3_posting' AND fieldname='faqtext'");

while ($ct_phrase = $db->fetch_array($ct_phrases)) {
    if ($ct_phrase[languagecode] == 'ru') {
	$ct_text = str_replace('<p>„‰ √Ã· Õ„«Ì… «·„‰ œÏ „‰ «·»—Ìœ «·„“⁄Ã «·»—Ìœ «·≈·ﬂ —Ê‰Ì «·Œ«’ »ﬂ, ·ﬁ», ⁄‰Ê«‰ IP, Ê —”«·… Ì„ﬂ‰ ≈—”«·Â« ≈·Ï ŒÊ«œ„ „ﬂ«›Õ… «·»—Ìœ «·„“⁄Ã «·Œœ„… <a href="http://cleantalk.org">CleanTalk</a>.</p>', '', $ct_phrase[text]);
	$db->query_write("UPDATE " . TABLE_PREFIX . "phrase SET `text` = '".$db->escape_string($ct_text)."' WHERE phraseid='".$ct_phrase[phraseid]."'");
    }
}]]></uninstallcode>
		</code>
	</codes>
	<templates>
	</templates>
	<stylevardfns>
	</stylevardfns>
	<stylevars>
	</stylevars>
	<plugins>
		<plugin active="1" executionorder="1">
			<title>Cleantalk: register_addmember_process</title>
			<hookname>register_addmember_process</hookname>
			<phpcode><![CDATA[if(!class_exists('CleantalkResponse') || !class_exists('CleantalkRequest') || !class_exists('Cleantalk')){
    $code_base = $vbulletin->db->query_first("SELECT php_code FROM " . TABLE_PREFIX . "cleantalk_php_code WHERE id='class_base' LIMIT 1");
    if(is_array($code_base) && !empty($code_base['php_code'])){
        eval($code_base['php_code']);
    }
}

if(!class_exists('CleantalkAPI')){
    $code_api = $vbulletin->db->query_first("SELECT php_code FROM " . TABLE_PREFIX . "cleantalk_php_code WHERE id='class_api' LIMIT 1");
    if(is_array($code_api) && !empty($code_api['php_code'])){
        eval($code_api['php_code']);
    }
}

if(
    class_exists('CleantalkResponse') &&
    class_exists('CleantalkRequest') &&
    class_exists('Cleantalk') &&
    class_exists('CleantalkAPI')
){
    if ($vbulletin->options['cleantalk_register_onoff'] && $vbulletin->options['cleantalk_onoff'] && empty($userdata->errors)) {
        $aUser = array();
        $aUser['type'] = 'register';
        $aUser['sender_email'] = isset($vbulletin->GPC['email']) ? $vbulletin->GPC['email'] : '';
        $aUser['sender_nickname'] = isset($vbulletin->GPC['username']) ? $vbulletin->GPC['username'] : '';

        $aResult = CleantalkAPI::CheckSpam($aUser, TRUE); // Send email too

        if(isset($aResult) && is_array($aResult)){
            if($aResult['errno'] == 0){
                if($aResult['allow'] == 0){
                    // Spammer - fill errors
                    // Note: 'stop_queue' is ignored in user checking
                    if (preg_match('//u', $aResult['ct_result_comment'])){
                                $comment_str = preg_replace('/^[^\*]*?\*\*\*|\*\*\*[^\*]*?$/iu', '', $aResult['ct_result_comment']);
                                $comment_str = preg_replace('/<[^<>]*>/iu', '', $comment_str);
                    }else{
                                $comment_str = preg_replace('/^[^\*]*?\*\*\*|\*\*\*[^\*]*?$/i', '', $aResult['ct_result_comment']);
                                $comment_str = preg_replace('/<[^<>]*>/i', '', $comment_str);
                    }
                    $userdata->errors[] = '<font color="red">'.$comment_str.'</font>';
                    $log_str = 'Username: '.$vbulletin->GPC['username'].', email: '.$vbulletin->GPC['email'].'. '.$comment_str;
                    if($vbulletin->options['cleantalk_log_onoff'])
                    {
                    	$vbulletin->db->query_write("INSERT INTO " . TABLE_PREFIX . "moderatorlog (dateline, action, threadtitle, product, ipaddress) VALUES ('".TIMENOW."', '".$vbulletin->db->escape_string($log_str)."', '', 'cleantalk', '".$vbulletin->db->escape_string(IPADDRESS)."')");
                    }
                }
            }
        }
        unset($aUser);
        unset($aResult);
    }
}]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Cleantalk: register_form_complete</title>
			<hookname>register_form_complete</hookname>
			<phpcode><![CDATA[if($vbulletin->options['cleantalk_link_onoff'])   
                {   
                    $code = "<div id='cleantalk_footer_link' style='width:100%;text-align:center;'><a href='https://cleantalk.org/vbulletin-anti-spam-hack'>vBulletin spam</a> blocked by CleanTalk.</div>";   
                    $footer.= $code;   
                }   
if(!class_exists('CleantalkAPI')){     
                        $code_api = $vbulletin->db->query_first("SELECT php_code FROM " . TABLE_PREFIX . "cleantalk_php_code WHERE id='class_api' LIMIT 1");     
                        if(is_array($code_api) && !empty($code_api['php_code'])){     
                            eval($code_api['php_code']);     
                        }     
                    }     
                    if(class_exists('CleantalkAPI')){     
                        if ($vbulletin->options['cleantalk_register_onoff'] && $vbulletin->options['cleantalk_onoff']) {     
                           echo CleantalkAPI::FormAddon('comment');     
                        }     
                    } ]]></phpcode>
		</plugin>
        <plugin active="1" executionorder="5">
            <title>Cleantalk: forumhome_complete</title>
            <hookname>forumhome_complete</hookname>
            <phpcode><![CDATA[if($vbulletin->options['cleantalk_link_onoff'])   
                {   
                    $code = "<div id='cleantalk_footer_link' style='width:100%;text-align:center;'><a href='https://cleantalk.org/vbulletin-anti-spam-hack'>vBulletin spam</a> blocked by CleanTalk.</div>";   
                    $footer.= $code;   
                }   
if(!class_exists('CleantalkAPI')){     
                        $code_api = $vbulletin->db->query_first("SELECT php_code FROM " . TABLE_PREFIX . "cleantalk_php_code WHERE id='class_api' LIMIT 1");     
                        if(is_array($code_api) && !empty($code_api['php_code'])){     
                            eval($code_api['php_code']);     
                        }     
                    }     
                    if(class_exists('CleantalkAPI')){     
                        if ($vbulletin->options['cleantalk_onoff']) {     
                           echo CleantalkAPI::FormAddon('comment');     
                        }     
                    } ]]></phpcode>
        </plugin>
		<plugin active="1" executionorder="5">
			<title>Cleantalk: forumdisplay_complete</title>
			<hookname>forumdisplay_complete</hookname>
			<phpcode><![CDATA[
if($vbulletin->options['cleantalk_link_onoff'])   
                {   
                    $code = "<div id='cleantalk_footer_link' style='width:100%;text-align:center;'><a href='https://cleantalk.org/vbulletin-anti-spam-hack'>vBulletin spam</a> blocked by CleanTalk.</div>";   
                    $footer.= $code;   
                }   
if(!class_exists('CleantalkAPI')){     
                        $code_api = $vbulletin->db->query_first("SELECT php_code FROM " . TABLE_PREFIX . "cleantalk_php_code WHERE id='class_api' LIMIT 1");     
                        if(is_array($code_api) && !empty($code_api['php_code'])){     
                            eval($code_api['php_code']);     
                        }     
                    }     
                    if(class_exists('CleantalkAPI')){     
                        if ($vbulletin->options['cleantalk_onoff']) {     
                           echo CleantalkAPI::FormAddon('comment');     
                        }     
                    } 
			]]></phpcode>
		</plugin>
		<plugin active="1" executionorder="5">
			<title>Cleantalk: newthread_form_complete</title>
			<hookname>newthread_form_complete</hookname>
			<phpcode><![CDATA[if($vbulletin->options['cleantalk_link_onoff'])   
                {   
                    $code = "<div id='cleantalk_footer_link' style='width:100%;text-align:center;'><a href='https://cleantalk.org/vbulletin-anti-spam-hack'>vBulletin spam</a> blocked by CleanTalk.</div>";   
                    $footer.= $code;   
                }   
if(!class_exists('CleantalkAPI')){     
                        $code_api = $vbulletin->db->query_first("SELECT php_code FROM " . TABLE_PREFIX . "cleantalk_php_code WHERE id='class_api' LIMIT 1");     
                        if(is_array($code_api) && !empty($code_api['php_code'])){     
                            eval($code_api['php_code']);     
                        }     
                    }     
                    if(class_exists('CleantalkAPI')){     
                        if ($vbulletin->options['cleantalk_threads_onoff'] && $vbulletin->options['cleantalk_onoff']) {     
                           echo CleantalkAPI::FormAddon('comment');     
                        }     
                    } 
			]]></phpcode>
		</plugin>
        <plugin active="1" executionorder="5">
            <title>Cleantalk: showthread_complete</title>
            <hookname>showthread_complete</hookname>
            <phpcode><![CDATA[if($vbulletin->options['cleantalk_link_onoff'])   
                {   
                    $code = "<div id='cleantalk_footer_link' style='width:100%;text-align:center;'><a href='https://cleantalk.org/vbulletin-anti-spam-hack'>vBulletin spam</a> blocked by CleanTalk.</div>";   
                    $footer.= $code;   
                }   
if(!class_exists('CleantalkAPI')){     
                        $code_api = $vbulletin->db->query_first("SELECT php_code FROM " . TABLE_PREFIX . "cleantalk_php_code WHERE id='class_api' LIMIT 1");     
                        if(is_array($code_api) && !empty($code_api['php_code'])){     
                            eval($code_api['php_code']);     
                        }     
                    }     
                    if(class_exists('CleantalkAPI')){     
                        if ($vbulletin->options['cleantalk_threads_onoff'] && $vbulletin->options['cleantalk_onoff']) {     
                           echo CleantalkAPI::FormAddon('comment');     
                        }     
                    } 
            ]]></phpcode>
        </plugin>
		<plugin active="1" executionorder="5">
			<title>Cleantalk: newreply_form_complete</title>
			<hookname>newreply_form_complete</hookname>
			<phpcode><![CDATA[if($vbulletin->options['cleantalk_link_onoff'])   
                {   
                    $code = "<div id='cleantalk_footer_link' style='width:100%;text-align:center;'><a href='https://cleantalk.org/vbulletin-anti-spam-hack'>vBulletin spam</a> blocked by CleanTalk.</div>";   
                    $footer.= $code;   
                }   
if(!class_exists('CleantalkAPI')){     
                        $code_api = $vbulletin->db->query_first("SELECT php_code FROM " . TABLE_PREFIX . "cleantalk_php_code WHERE id='class_api' LIMIT 1");     
                        if(is_array($code_api) && !empty($code_api['php_code'])){     
                            eval($code_api['php_code']);     
                        }     
                    }     
                    if(class_exists('CleantalkAPI')){     
                        if ($vbulletin->options['cleantalk_threads_onoff'] && $vbulletin->options['cleantalk_onoff']) {     
                           echo CleantalkAPI::FormAddon('comment');     
                        }     
                    } 
			]]></phpcode>
		</plugin>	
		<plugin active="1" executionorder="1">
			<title>Cleantalk: newpost_process</title>
			<hookname>newpost_process</hookname>
			<phpcode><![CDATA[if(!class_exists('CleantalkResponse') || !class_exists('CleantalkRequest') || !class_exists('Cleantalk')){  
    $code_base = $vbulletin->db->query_first("SELECT php_code FROM " . TABLE_PREFIX . "cleantalk_php_code WHERE id='class_base' LIMIT 1");  
    if(is_array($code_base) && !empty($code_base['php_code'])){  
        eval($code_base['php_code']);  
    }  
}  

if(!class_exists('CleantalkAPI')){  
    $code_api = $vbulletin->db->query_first("SELECT php_code FROM " . TABLE_PREFIX . "cleantalk_php_code WHERE id='class_api' LIMIT 1");  
    if(is_array($code_api) && !empty($code_api['php_code'])){  
        eval($code_api['php_code']);  
    }  
} 
if(    
    class_exists('CleantalkResponse') &&  
    class_exists('CleantalkRequest') &&  
    class_exists('Cleantalk') &&  
    class_exists('CleantalkAPI')  
){  
    if ($vbulletin->options['cleantalk_threads_onoff'] && $vbulletin->options['cleantalk_onoff'] && empty($dataman->errors)) {  
        $aUser = array(); 
        $postinfo = fetch_postinfo($post['postid']); 
        $threadinfo = fetch_threadinfo($postinfo['threadid']);  
        $aUser['type'] = 'comment';  
        $aUser['sender_email'] = isset($vbulletin->userinfo['email']) ? $vbulletin->userinfo['email'] : '';  
        $aUser['sender_nickname'] = isset($vbulletin->userinfo['username']) ? $vbulletin->userinfo['username'] : '';  
        $aUser['message_body'] = isset($postinfo['pagetext']) ? $postinfo['pagetext']  : '';  
        $aUser['message_title'] = empty($postinfo['title']) ? $threadinfo['title'] : $postinfo['title']; 
        $aResult = CleantalkAPI::CheckSpam($aUser, TRUE); // Send email too  

        if(isset($aResult) && is_array($aResult)){  
            if($aResult['errno'] == 0){  
                if($aResult['allow'] == 0){  
require_once(DIR . '/includes/functions_databuild.php'); 
                    // Spammer - fill errors  
                    // Note: 'stop_queue' is ignored in user checking  
        $ct_mod_info = array( 
                              'userid'          => $GLOBALS['vbulletin']->userinfo['userid'], 
                              'username'        => $GLOBALS['vbulletin']->userinfo['username'], 
                              'reason'          => $aResult['ct_result_comment'], 
                              'keepattachments' => true 
                            ); 
                    $log_str = 'Username: '.$vbulletin->userinfo['username'].', email: '.$vbulletin->userinfo['email'].'. '.$aResult['ct_result_comment'];  
                    if($vbulletin->options['cleantalk_log_onoff'])  
                    {  
                        $vbulletin->db->query_write("INSERT INTO " . TABLE_PREFIX . "moderatorlog (dateline, action, threadtitle, product, ipaddress) VALUES ('".TIMENOW."', '".$vbulletin->db->escape_string($log_str)."', '', 'cleantalk', '".$vbulletin->db->escape_string(IPADDRESS)."')");  
                    }  
delete_post( $postinfo['postid'], true, $threadinfo['threadid'], true, $ct_mod_info, true ); 
        build_thread_counters($threadinfo['threadid']); 
        build_forum_counters($threadinfo['forumid']); 
$reason = '<font color="red">'.$aResult['ct_result_comment'].'</font>'; 
eval(standard_error($reason)); 
                }  
            }  
        }  
        unset($aUser);  
        unset($aResult);  
    }  
}  
			]]></phpcode>
		</plugin>				
	</plugins>
	<phrases>
		<phrasetype name="Error Messages" fieldname="error">
			<phrase name="cleantalk_wrong" date="1165886086" username="admin" version="1.1"><![CDATA[Cleantalk Œÿ√ ›Ì «·Ê’Ê· ≈·Ï]]></phrase>
		</phrasetype>
		<phrasetype name="vBulletin Settings" fieldname="vbsettings">
			<phrase name="setting_cleantalk_homepage_desc" date="1386770576" username="admin" version="1.0.2"><![CDATA[Ê‰Õ‰ ”Ê› ÌÃÌ» ⁄·Ï Ã„Ì⁄ «·√”∆·… «·Œ«’… »ﬂ]]></phrase>
			<phrase name="setting_cleantalk_homepage_title" date="1386770576" username="admin" version="1.0.2"><![CDATA[«·’›Õ… «·—∆Ì”Ì…]]></phrase>
			<phrase name="setting_cleantalk_key_desc" date="1156440504" username="admin" version="1.0"><![CDATA[<a target="__blank" href="https://cleantalk.org/vbulletin">«‰ﬁ— ··Õ’Ê· ⁄·Ï „› «Õ</a>]]></phrase>
			<phrase name="setting_cleantalk_key_title" date="1156440504" username="admin" version="1.0"><![CDATA[„› «Õ «·Ê’Ê·]]></phrase>
			<phrase name="setting_cleantalk_onoff_desc" date="1156440504" username="admin" version="1.0"><![CDATA[≈–« ﬂ‰   —€» ›Ì  ⁄ÿÌ· «·Õ„«Ì… „ﬂ«›Õ… «·»—Ìœ «·„“⁄Ã ° «Œ — ·«]]></phrase>
			<phrase name="setting_cleantalk_onoff_title" date="1156440504" username="admin" version="1.0"><![CDATA[ „ﬂÌ‰ «·»—Ìœ «· ÿ›·Ì «·Õ„«Ì… ø ]]></phrase>
			<phrase name="setting_cleantalk_register_onoff_desc" date="1156440504" username="admin" version="1.0"><![CDATA[≈–« ﬂ‰   —€» ›Ì  ⁄ÿÌ· «· ”ÃÌ· ° «Œ — ·«]]></phrase>
			<phrase name="setting_cleantalk_register_onoff_title" date="1156440504" username="admin" version="1.0"><![CDATA[«·«Œ Ì«—  „ﬂÌ‰ «· ”ÃÌ·?]]></phrase>
			<phrase name="setting_cleantalk_threads_onoff_desc" date="1156440504" username="admin" version="1.0"><![CDATA[≈–« ﬂ‰   —€» ›Ì  ⁄ÿÌ· «·»—Ìœ «·„“⁄Ã Ê›Õ’ «·ŒÌÊÿ ° «·—Ã«¡  ÕœÌœ ·« Â‰«.]]></phrase>
			<phrase name="setting_cleantalk_threads_onoff_title" date="1156440504" username="admin" version="1.0"><![CDATA[„ﬂ‰ Ê —”«∆·  ›ﬁœ?]]></phrase>			
			<phrase name="setting_cleantalk_log_onoff_desc" date="1156440504" username="admin" version="1.2"><![CDATA[≈–« ﬂ‰   —€» ›Ì  ⁄ÿÌ· ”Ã· «·‘Ìﬂ«  ° «Œ — ·«]]></phrase>
			<phrase name="setting_cleantalk_log_onoff_title" date="1156440504" username="admin" version="1.2"><![CDATA[·≈Ìﬁ«›  ”ÃÌ· «·‘Ìﬂ«  ø]]></phrase>
			<phrase name="setting_cleantalk_link_onoff_desc" date="1156440504" username="admin" version="1.2"><![CDATA[ „ﬂÌ‰ Â–« «·ŒÌ«— ”Ì „ Ê÷⁄ «·Ã“¡ «·”›·Ì „‰ ﬂ· ’›Õ… „‰ „Êﬁ⁄ «·ÊÌ» «·Œ«’ »ﬂ —«»ÿ „Êﬁ⁄‰« ⁄·Ï «·≈‰ —‰ . ÊÂ–« ”Ê› Ì”„Õ ·ﬂ √‰  Œ»— “Ê«— „Êﬁ⁄ﬂ √‰ ﬂ‰   ” Œœ„ CleanTalk ·Õ„«Ì… «·„Êﬁ⁄]]></phrase>
			<phrase name="setting_cleantalk_link_onoff_title" date="1156440504" username="admin" version="1.2"><![CDATA[√‰ √ﬁÊ· ·ﬂ„ ﬂ· ‘Ì¡ ⁄‰ CleanTalk?]]></phrase>
			<phrase name="settinggroup_cleantalk" date="1156439888" username="admin" version="1.0"><![CDATA[„‰ „ﬂ«›Õ… «·»—Ìœ «·„“⁄Ã CleanTalk]]></phrase>
		</phrasetype>
	</phrases>
	<options>
		<settinggroup name="cleantalk" displayorder="6690">
			<setting varname="cleantalk_homepage" displayorder="1">
				<datatype>free</datatype>
				<optioncode><![CDATA[<div class=\"smallfont\"><a target=\"__blank\" href=\"https://cleantalk.org\">https://cleantalk.org</a></div>]]></optioncode>
			</setting>
			<setting varname="cleantalk_onoff" displayorder="1">
				<datatype>boolean</datatype>
				<optioncode>yesno</optioncode>
				<defaultvalue>1</defaultvalue>
			</setting>
			<setting varname="cleantalk_register_onoff" displayorder="1">
				<datatype>boolean</datatype>
				<optioncode>yesno</optioncode>
				<defaultvalue>1</defaultvalue>
			</setting>
			<setting varname="cleantalk_threads_onoff" displayorder="1">
				<datatype>boolean</datatype>
				<optioncode>yesno</optioncode>
				<defaultvalue>1</defaultvalue>
			</setting>			
			<setting varname="cleantalk_link_onoff" displayorder="1">
				<datatype>boolean</datatype>
				<optioncode>yesno</optioncode>
				<defaultvalue>0</defaultvalue>
			</setting>
			<setting varname="cleantalk_log_onoff" displayorder="1">
				<datatype>boolean</datatype>
				<optioncode>yesno</optioncode>
				<defaultvalue>1</defaultvalue>
			</setting>
			<setting varname="cleantalk_key" displayorder="10">
				<datatype>free</datatype>
			</setting>
		</settinggroup>
	</options>
	<helptopics>
	</helptopics>
	<cronentries>
	</cronentries>
	<faqentries>
	</faqentries>
	<navigation>
	</navigation>
</product>
